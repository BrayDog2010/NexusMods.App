<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:NexusMods.UI.Sdk.Icons;assembly=NexusMods.UI.Sdk">
    <Design.PreviewWith>
        <Border Padding="8" Width="500">
            <StackPanel>
                <Expander>
                    <Border>
                        <TextBlock>Expander Content</TextBlock>
                    </Border>
                </Expander>
                <Expander IsEnabled="False">
                    <Border>
                        <TextBlock>Expander Content</TextBlock>
                    </Border>
                </Expander>
                <Expander Header="Expander">
                    <Border>
                        <TextBlock>Expander Content</TextBlock>
                    </Border>
                </Expander>
                <Expander Header="Expander" IsEnabled="False">
                    <Border>
                        <TextBlock>Expander Content</TextBlock>
                    </Border>
                </Expander>
                <Expander IsExpanded="True" ExpandDirection="Down" Classes="LibraryView">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" Spacing="{StaticResource Spacing-2}"
                                    Classes="LibraryHeader">
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.CollectionsOutline}" />
                            <TextBlock Text="Collections" />
                            <TextBlock x:Name="TextNumCollections" Text="0" />
                        </StackPanel>
                    </Expander.Header>
                    <Border>
                        <TextBlock>Expander Content</TextBlock>
                    </Border>
                </Expander>
            </StackPanel>

        </Border>
    </Design.PreviewWith>

    <Styles.Resources>

        <CornerRadius x:Key="ExpanderHeaderCornerRadius">0</CornerRadius>

        <!-- Copied from source src/Avalonia.Themes.Fluent/Controls/Expander.xaml -->

        <!-- Shared header/content -->
        <x:Double x:Key="ExpanderMinHeight">0</x:Double>

        <!-- Header -->
        <HorizontalAlignment x:Key="ExpanderHeaderHorizontalContentAlignment">Stretch</HorizontalAlignment>
        <VerticalAlignment x:Key="ExpanderHeaderVerticalContentAlignment">Center</VerticalAlignment>
        <Thickness x:Key="ExpanderHeaderPadding">8</Thickness>
        <Thickness x:Key="ExpanderHeaderBorderThickness">0</Thickness>
        <Thickness x:Key="ExpanderChevronBorderThickness">0</Thickness>
        <Thickness x:Key="ExpanderChevronMargin">20,0,8,0</Thickness>
        <x:Double x:Key="ExpanderChevronButtonSize">20</x:Double>

        <!-- Content -->
        <Thickness x:Key="ExpanderContentPadding">0</Thickness>
        <Thickness x:Key="ExpanderContentLeftBorderThickness">0</Thickness>
        <Thickness x:Key="ExpanderContentUpBorderThickness">0</Thickness>
        <Thickness x:Key="ExpanderContentRightBorderThickness">0</Thickness>
        <Thickness x:Key="ExpanderContentDownBorderThickness">0</Thickness>

        <!-- copied from source src/Avalonia.Themes.Fluent/Accents/FluentControlResources.xaml -->

        <!-- Expander:Header -->
        <StaticResource x:Key="ExpanderHeaderBackground" ResourceKey="SurfaceMidBrush" />
        <StaticResource x:Key="ExpanderHeaderBackgroundPointerOver" ResourceKey="SurfaceHighBrush" />
        <StaticResource x:Key="ExpanderHeaderBackgroundPressed" ResourceKey="SurfaceLowBrush" />
        <SolidColorBrush x:Key="ExpanderHeaderBackgroundDisabled"
                         Color="{StaticResource SurfaceMid}"
                         Opacity="{StaticResource OpacityDisabledElement}" />

        <StaticResource x:Key="ExpanderHeaderForeground" ResourceKey="NeutralModerateBrush" />
        <StaticResource x:Key="ExpanderHeaderForegroundPointerOver" ResourceKey="NeutralModerateBrush" />
        <StaticResource x:Key="ExpanderHeaderForegroundPressed" ResourceKey="NeutralModerateBrush" />
        <SolidColorBrush x:Key="ExpanderHeaderForegroundDisabled"
                         Color="{StaticResource NeutralModerate}"
                         Opacity="{StaticResource OpacityDisabledElement}" />

        <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="StrokeTranslucentModerateBrush" />
        <StaticResource x:Key="ExpanderHeaderBorderBrushPointerOver" ResourceKey="StrokeTranslucentModerateBrush" />
        <StaticResource x:Key="ExpanderHeaderBorderBrushPressed" ResourceKey="StrokeTranslucentModerateBrush" />
        <SolidColorBrush x:Key="ExpanderHeaderBorderBrushDisabled"
                         Color="{StaticResource StrokeTranslucentModerate}"
                         Opacity="{StaticResource OpacityDisabledElement}" />

        <StaticResource x:Key="ExpanderChevronBackground" ResourceKey="SurfaceMidBrush" />
        <StaticResource x:Key="ExpanderChevronBackgroundPointerOver" ResourceKey="SurfaceHighBrush" />
        <StaticResource x:Key="ExpanderChevronBackgroundPressed" ResourceKey="SurfaceLowBrush" />
        <SolidColorBrush x:Key="ExpanderChevronBackgrounddDisabled"
                         Color="{StaticResource SurfaceMid}"
                         Opacity="{StaticResource OpacityDisabledElement}" />

        <StaticResource x:Key="ExpanderChevronForeground" ResourceKey="NeutralModerateBrush" />
        <StaticResource x:Key="ExpanderChevronForegroundPointerOver" ResourceKey="NeutralStrongBrush" />
        <StaticResource x:Key="ExpanderChevronForegroundPressed" ResourceKey="NeutralWeakBrush" />
        <SolidColorBrush x:Key="ExpanderChevronForegroundDisabled"
                         Color="{StaticResource NeutralModerate}"
                         Opacity="{StaticResource OpacityDisabledElement}" />

        <SolidColorBrush x:Key="ExpanderChevronBorderBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ExpanderChevronBorderBrushPointerOver" Color="Transparent" />
        <SolidColorBrush x:Key="ExpanderChevronBorderBrushPressed" Color="Transparent" />
        <SolidColorBrush x:Key="ExpanderChevronBorderBrushDisabled" Color="Transparent" />

        <!-- Expander:Content -->
        <StaticResource x:Key="ExpanderContentBackground" ResourceKey="SurfaceTransparentBrush" />
        <StaticResource x:Key="ExpanderContentBorderBrush" ResourceKey="NeutralModerateBrush" />


        <ControlTheme x:Key="FluentExpanderToggleButtonTheme" TargetType="ToggleButton">
            <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="{DynamicResource ExpanderHeaderBorderThickness}" />
            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
            <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderPadding}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{DynamicResource ExpanderHeaderHorizontalContentAlignment}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{DynamicResource ExpanderHeaderVerticalContentAlignment}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border x:Name="ToggleButtonBackground"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="ToggleButtonGrid"
                              ColumnDefinitions="*,Auto">
                            <ContentPresenter x:Name="PART_ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}" />
                            <Border x:Name="ExpandCollapseChevronBorder"
                                    Grid.Column="1"
                                    Width="{DynamicResource ExpanderChevronButtonSize}"
                                    Height="{DynamicResource ExpanderChevronButtonSize}"
                                    Margin="{DynamicResource ExpanderChevronMargin}"
                                    CornerRadius="{DynamicResource ControlCornerRadius}"
                                    BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                    BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                    Background="{DynamicResource ExpanderChevronBackground}">
                                <Path x:Name="ExpandCollapseChevron"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="50%,50%"
                                      Stretch="None"
                                      Stroke="{DynamicResource ExpanderChevronForeground}"
                                      StrokeThickness="1">
                                    <Path.RenderTransform>
                                        <RotateTransform />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter>

            <Style Selector="^[Tag=expanded] /template/ Path#ExpandCollapseChevron">
                <Style.Animations>
                    <Animation FillMode="Both" Duration="0:0:0.0625">
                        <KeyFrame Cue="100%">
                            <Setter Property="RotateTransform.Angle" Value="180" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>

            <Style Selector="^[Tag=collapsed] /template/ Path#ExpandCollapseChevron">
                <Style.Animations>
                    <Animation FillMode="Both" Duration="0:0:0.0625">
                        <KeyFrame Cue="0%">
                            <Setter Property="RotateTransform.Angle" Value="180" />
                        </KeyFrame>
                        <KeyFrame Cue="100%">
                            <Setter Property="RotateTransform.Angle" Value="0" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>

            <!-- PointerOver -->
            <Style Selector="^:pointerover /template/ Border#ToggleButtonBackground">
                <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrushPointerOver}" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
            </Style>
            <Style Selector="^:pointerover /template/ Border#ExpandCollapseChevronBorder">
                <Setter Property="Background" Value="{DynamicResource ExpanderChevronBackgroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrushPointerOver}" />
            </Style>
            <Style Selector="^:pointerover /template/ Path#ExpandCollapseChevron">
                <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundPointerOver}" />
            </Style>

            <!-- Pressed -->
            <Style Selector="^:pressed /template/ Border#ToggleButtonBackground">
                <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrushPressed}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
            </Style>
            <Style Selector="^:pressed /template/ Border#ExpandCollapseChevronBorder">
                <Setter Property="Background" Value="{DynamicResource ExpanderChevronBackgroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrushPressed}" />
            </Style>
            <Style Selector="^:pressed /template/ Path#ExpandCollapseChevron">
                <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundPressed}" />
            </Style>

            <!-- Disabled -->
            <Style Selector="^:disabled /template/ Border#ToggleButtonBackground">
                <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrushDisabled}" />
            </Style>
            <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundDisabled}" />
            </Style>
            <Style Selector="^:disabled /template/ Border#ExpandCollapseChevronBorder">
                <Setter Property="Background" Value="{DynamicResource ExpanderChevronBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrushDisabled}" />
            </Style>
            <Style Selector="^:disabled /template/ Path#ExpandCollapseChevron">
                <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundDisabled}" />
            </Style>

        </ControlTheme>


    </Styles.Resources>

    <Style Selector="Expander">

    </Style>

</Styles>
